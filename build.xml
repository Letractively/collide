<project name="collide" default="build">
  <property name="dirs.root" location="."/>
  <!-- Import common properties and macros -->
  <import optional="false" file="${dirs.root}/macros.ant.xml"/>

  <!-- Include subdirectory targets.  For each <include as="foo" .../>, the
       targets in that file are available here as foo.targetname. -->
  <include optional="false" as="tools.dtogen"
     file="${dirs.src}/${dirs.toppkg}/dtogen/build.xml"/>

  <include optional="false" as="src.json"
     file="${dirs.src}/${dirs.toppkg}/json/build.xml"/>
  <include optional="false" as="src.shared"
     file="${dirs.src}/${dirs.toppkg}/shared/build.xml"/>
  <include optional="false" as="src.dto"
     file="${dirs.src}/${dirs.toppkg}/dto/build.xml"/>
  <include optional="false" as="src.clientlibs"
     file="${dirs.src}/${dirs.toppkg}/clientlibs/build.xml"/>
  <include optional="false" as="src.client"
     file="${dirs.src}/${dirs.toppkg}/client/build.xml"/>
  <include optional="false" as="src.server"
     file="${dirs.src}/${dirs.toppkg}/server/build.xml"/>

  <include optional="false" as="test.api"
     file="${dirs.test}/${dirs.toppkg}/server/api/build.xml"/>
  <include optional="false" as="test.json"
     file="${dirs.test}/${dirs.toppkg}/json/build.xml"/>
  <include optional="false" as="test.shared"
     file="${dirs.test}/${dirs.toppkg}/shared/build.xml"/>
  <include optional="false" as="test.dtogen"
     file="${dirs.test}/${dirs.toppkg}/dtogen/build.xml"/>
  <include optional="false" as="test.codemirror2"
     file="${dirs.test}/${dirs.toppkg}/codemirror2/build.xml"/>
  <include optional="false" as="test.client"
     file="${dirs.test}/${dirs.toppkg}/client/build.xml"/>
  <include optional="false" as="test.clientlibs"
     file="${dirs.test}/${dirs.toppkg}/clientlibs/build.xml"/>


  <target name="dist" description="Package up the distribution"
          depends="build">
    <!-- Copy the launch and bootstrap scripts to the dist folder. -->
    <copy todir="${dirs.dist}">
      <fileset dir="${dirs.bin}">
        <include name="bootstrap.js" />
        <include name="collide" />
      </fileset>
    </copy>

    <!-- Copy the GWT client. -->
    <copy todir="${dirs.dist}/static">
      <fileset dir="${dirs.bin}/static" />
    </copy>

    <!-- To preserve executable file permissions on launcher script. -->
    <chmod dir="${dirs.dist}" perm="ugo+rx"  includes="collide"/>

    <!-- Create a server jar from all the classes and drop it in the dist/lib folder. -->
    <jar destfile="${dirs.dist}/lib/collide-server.jar"
         basedir="${dirs.bin}"
         includes="**/*.class **/*.js"/>

    <!-- Copy all deps to the dist/lib folder -->
    <copy todir="${dirs.dist}/lib" flatten="true">
      <path refid="paths.server.runtime" />
    </copy>

    <!-- Copy vertx into the deploy folder -->
    <copy todir="${dirs.dist}/lib/vertx">
    	<fileset dir="${dirs.vertx}" />
    </copy>
    <chmod file="${dirs.dist}/lib/vertx/bin/vertx" perm="ugo+rx"/>
  </target>

  <target name="copy.launch">
    <!-- Copy launch scripts to bin directory. -->
    <copy todir="${dirs.bin}">
      <fileset dir="${dirs.root}">
        <include name="bootstrap.js" />
        <include name="collide" />
      </fileset>
    </copy>

    <!-- To preserve executable file permissions on launcher script. -->
    <chmod dir="${dirs.bin}" perm="ugo+rx"  includes="collide"/>
  </target>

  <target name="build" description="Build the whole Collide executable"
      depends="src.shared.build, src.dto.build, src.client.build,
	       src.server.build, copy.launch">
  </target>

  <!-- TODO: enable test.client.test -->
  <target name="test" description="Run all the tests"
      depends="test-compile, test.shared.test, test.json.test, test.dtogen.test,
	       test.codemirror2.test, test.clientlibs.test, test.api.test"/>

  <target name="test-compile" description="Build all the test code"
      depends="test.shared.build, test.api.build, test.json.build,
               test.dtogen.build, test.codemirror2.build, test.client.build,
	       test.clientlibs.build">
    <!-- Copy all deps to the ${dirs.testbin}/lib folder -->
    <copy todir="${dirs.testbin}/lib" flatten="true">
      <path refid="paths.server.build" />
      <path refid="paths.client.build" />
    </copy>
  </target>

</project>
